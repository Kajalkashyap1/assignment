1. Write a recursive function to calculate sum of first N natural numbers
#include<stdio.h>
int sum(int);
int main()
{
    int n;
    printf("\n enter the value of n");
    scanf("%d",&n);
    printf("\n sum of %d natural nums is:%d",n,sum(n));
    
    return 0;
}
int sum(int n)
{
    
    if(n==0)
    return 0;
    else
    return (n+sum(n-1));
}

2. Write a recursive function to calculate sum of first N odd natural numbers
#include<stdio.h>
int sumOdd(int);
int main()
{
    int n;
    printf("\n enter the value of n");
    scanf("%d",&n);
    printf("\n sum of %d odd natural nums is:%d",n,sumOdd(n));
    
    return 0;
}
int sumOdd(int n)
{
    
    if(n>0)
    return ((2*n-1)+sumOdd(n-1));
}

3. Write a recursive function to calculate sum of first N even natural numbers
#include<stdio.h>
int sumEven(int);
int main()
{
    int n;
    printf("\n enter the value of n");
    scanf("%d",&n);
    printf("\n sum of %d even natural nums is:%d",n,sumEven(n));
    
    return 0;
}
int sumEven(int n)
{
    
    if(n>0)
    return ((2*n)+sumEven(n-1));
}

4. Write a recursive function to calculate sum of squares of first n natural numbers
#include<stdio.h>
int sumSquare(int);
int main()
{
    int n;
    printf("\n enter the value of n");
    scanf("%d",&n);
    printf("\n sum of square of %d  natural nums is:%d",n,sumSquare(n));
   
    return 0;
}
int sumSquare(int n)
{
    
    if(n>0)
    return ((n*n)+sumSquare(n-1));
}

5. Write a recursive function to calculate sum of digits of a given number
#include<stdio.h>
int sum(int);
int main()
{
    int n;
    printf("\n enter the value of n");
    scanf("%d",&n);
    printf("\n sum of square of %d  natural nums is:%d",n,sum(n));
    
    return 0;
}
int sum(int n)
{
    
    if(n>0)
    return ((n%10)+sum(n/10));
}

6. Write a recursive function to calculate factorial of a given number
#include<stdio.h>
int fact(int);
int main()
{
    int n;
    printf("\n enter the value of n");
    scanf("%d",&n);
    printf("\n Factorial of %d is:%d",n,fact(n));
    
    return 0;
}
int fact(int n)
{
    if(n==0 || n==1)
    return 1;
    else
    return (n*fact(n-1));
}

7.Write a recursive function to calculate HCF of two numbers
#include<stdio.h>
int hcf(int,int);
int main()
{
    int a,b;
    printf("\n enter two number");
    scanf("%d",&a,&b);
    int x =hcf(a,b);
    printf("\n hcf of %d and %d is %d",a,b,x);
    return 0;
}

int  hcf(int a,int b)
{
    while(a!=b)
    {
        if(a>b)
        hcf(a-b,b);
        else
        hcf(a,b-a);
    }
    return a;
    
}

8. Write a recursive function to print first N terms of Fibonacci series
#include<stdio.h>
void fibo(int);
int main()
{
    int n;
    printf("\n enter a num");
    scanf("%d",&n);
    fibo(n);
    return 0;
}
void fibo(int n)
{
    static int a=0,b=1,c,i;
    printf("%d %d",0,1);
    for(i=3;i<=n;i++)
    {
        c=a+b;
        printf(" %d",c);
        a=b;
        b=c;
    }
}

9. Write a program in C to count the digits of a given number using recursion.
#include<stdio.h>
int countdigit(int);
int main()
{
    int n,x;
    printf("\n enter a num");
    scanf("%d",&n);
    x=countdigit(n);
    printf("\n num of digit is %d",x);
    return 0;
}
int countdigit(int n)
{
    static int count=0;
    if(n==0)
    return count;
    else
    {
    count++;
    countdigit(n/10);
   
    }
    return count;
    
}

10. Write a program in C to calculate the power of any number using recursion

#include <stdio.h>
int power(int,int);
int main() {
    int a,n;
    printf("\n enter num and power");
    scanf("%d%d",&a,&n);
    int x=power(a,n);
    printf("\n power is %d",x);
    return 0;
}
int power(int a,int n)
{
    if(n==0)
    return 1;
    else 
    return (a*power(a,n-1));
}

