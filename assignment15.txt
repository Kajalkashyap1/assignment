1. Write a function to find the greatest number from the given array of any size. (TSRS)
#include<stdio.h>
int arr(int[],int);
int main()
{
    int i,n,a[20];
    printf("\n enter the size of array");
    scanf("%d",&n);
    printf("\n enter %d elements in the array",n);
    for(i=0;i<n;i++)
    scanf("%d",&a[i]);
    printf("\n Greatest Element in the array=%d",arr(a,n));
    return 0;
}
int arr(int a[],int n)
{
    int i,max=0;
    for(i=0;i<n;i++)
    {
    if(a[i]>max)
    max=a[i];
    }
    return max;
}

2. Write a function to find the smallest number from the given array of any size. (TSRS)
#include<stdio.h>
int arr(int[],int);
int main()
{
    int i,n,a[20];
    printf("\n enter the size of array");
    scanf("%d",&n);
    printf("\n enter %d elements in the array",n);
    for(i=0;i<n;i++)
    scanf("%d",&a[i]);
    printf("\n Smallest Element in the array=%d",arr(a,n));
    return 0;
}
int arr(int a[],int n)
{
    int i,min=a[0];
    for(i=0;i<n;i++)
    {
    if(min>a[i])
    min=a[i];
    }
    return min;
}

3. Write a function to sort an array of any size. (TSRS)
#include<stdio.h>
int main()
{
    int a[5],i,j,temp,min;
    printf("\n enter 5 elemeents in the array");
    for(i=0;i<5;i++)
    scanf("%d",&a[i]);
    printf("\n array before sorting\n");
    for(i=0;i<5;i++)
    printf("%d ",a[i]);
    printf("\n array after sorting.......\n");
    for(i=0;i<4;i++)
    {
        
        for(j=i+1;j<5;j++)
        {
            if(a[j]<a[i])
            {
                temp=a[i];
                a[i]=a[j];
                a[j]=temp;
            }
        }
    }
    for(i=0;i<5;i++)
    printf("%d ",a[i]);
    return 0;
}

4. Write a function to rotate an array by n position in d direction. The d is an indicative 
value for left or right. (For example, if array of size 5 is [32, 29, 40, 12, 70]; n is 2 and 
d is left, then the resulting array after left rotation 2 times is [40, 12, 70, 32, 29] )

#include<stdio.h>
#include<string.h>
void leftrotate(int [],int);
void rightrotate(int [],int);
int main()
{
    int n;
    printf("\n enter the size of the array");
    scanf("%d",&n);
    int a[n],i;
    printf("\n enter %d element in the array",n);
    for(i=0;i<n;i++)
    scanf("%d",&a[i]);
    char d[10];
    printf("\n enter the indentation\n");
    scanf("%s",d);
    if(strcmpi(d,"left")==0)
    leftrotate(a,n);
    else
    rightrotate(a,n);
    return 0;
}

void leftrotate(int a[],int n)
{
    int i,k,temp[n],count=0;
    printf("\n enter the num of rotation");
    scanf("%d",&k);
    for(i=k;i<n;i++)
    temp[count++]=a[i];
    for(i=0;i<k;i++)
    temp[count++]=a[i];
    for(i=0;i<n;i++)
    a[i]=temp[i];
    printf("\n Array After left rotation........\n");
    for(i=0;i<n;i++)
    printf("%d ",a[i]);
}
void rightrotate(int a[],int n)
{
    int i,k,temp[n],count=0;
    printf("\n enter the num of rotation");
    scanf("%d",&k);
    for(i=k+1;i<n;i++)
    temp[count++]=a[i];
    for(i=0;i<=k;i++)
    temp[count++]=a[i];
    for(i=0;i<n;i++)
    a[i]=temp[i];
    printf("\n Array after right rotation.......\n");
    for(i=0;i<n;i++)
    printf("%d ",a[i]);
}

5. Write a function to find the first occurrence of adjacent duplicate values in the array. 
Function has to return the value of the element.
#include<stdio.h>
#include<string.h>
int duplicate(int [],int);
int main()
{
    int n;
    printf("\n enter the size of the array");
    scanf("%d",&n);
    int a[n],i;
    printf("\n enter %d element in the array",n);
    for(i=0;i<n;i++)
    scanf("%d",&a[i]);
    printf("\n %d",duplicate(a,n));
    return 0;
}

int duplicate(int a[],int n)
{
    int i,j;
    for(i=0;i<n-1;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i]==a[j])
            return a[i];
        }
    }
    
}
6. Write a function in C to read n number of values in an array and display it in reverse 
order.

#include <stdio.h>
void reverseorder(int [],int);
int main() {
    int n;
    printf("\n enter the size of the array");
    scanf("%d",&n);
    int a[n],i;
    printf("\n enter %d element in the array",n);
    for(i=0;i<n;i++)
    scanf("%d",&a[i]);
    printf("\n Array......");
    for(i=0;i<n;i++)
    printf("%d ",a[i]);
    printf("\n");
    reverseorder(a,n);
    return 0;
}
void reverseorder(int a[],int n)
{
    int i,r,temp;
    for(i=0;i<n;i++)
    {
        temp=0;
        while(a[i]!=0)
        {
            r=a[i]%10;
            temp=temp*10+r;
            a[i]=a[i]/10;
        }
        printf("%d ",temp);
    }
}

7. Write a function in C to count a total number of duplicate elements in an array.

#include <stdio.h>
void countduplicate(int [],int);
int main() {
    int n;
    printf("\n enter the size of the array");
    scanf("%d",&n);
    int a[n],i;
    printf("\n enter %d element in the array",n);
    for(i=0;i<n;i++)
    scanf("%d",&a[i]);
    countduplicate(a,n);
    return 0;
}
void countduplicate(int a[],int n)
{
    int i,j,count=0,flag=0;
    for(i=0;i<n-1;i++)
    {
        count=0;
        for(j=i+1;j<n;j++)
        {
            if(a[i]==a[j])
            count++;
        }
        if(count!=0)
        flag++;
    }
    printf("\n number of dublicate element is %d",flag);
}

8. Write a function in C to print all unique elements in an array.

#include <stdio.h>
void printunique(int [],int);
int main() {
    int n;
    printf("\n enter the size of the array");
    scanf("%d",&n);
    int a[n],i;
    printf("\n enter %d element in the array",n);
    for(i=0;i<n;i++)
    scanf("%d",&a[i]);
    printf("\n");
    printunique(a,n);
    return 0;
}
void printunique(int a[],int n)
{
    int i,j,count=0;
    for(i=0;i<n;i++)
    {
        count=0;
        for(j=0;j<n;j++)
        {
            if(i!=j)
            {
            if(a[i]==a[j])
            count++;
        }
        }
        if(count==0)
        printf("%d ",a[i]);
    }
}
9. Write a function in C to merge two arrays of the same size sorted in descending 
order.

#include <stdio.h>
void merge(int [],int [],int);
void sort(int [],int);
int main() {
    int n;
    printf("\n enter the size of the array");
    scanf("%d",&n);
    int a[n],b[n],i;
    printf("\n enter %d element in 1st array",n);
    for(i=0;i<n;i++)
    scanf("%d",&a[i]);
    printf("\n enter %d element in the 2nd array",n);
    for(i=0;i<n;i++)
    scanf("%d",&b[i]);
    printf("\n");
    merge(a,b,n);
    
    return 0;
}
void merge(int a[],int b[],int n)
{
    int i,c[2*n],count=0;
    for(i=0;i<n;i++)
    c[count++]=a[i];
    for(i=0;i<n;i++)
    c[count++]=b[i];
    sort(c,2*n);
}
void sort(int c[],int n)
{
    int i,max,temp,j;
    for(i=0;i<n-1;i++)
    {
        max=i;
        for(j=i+1;j<n;j++)
        {
            if(c[max]<c[j])
            max=j;
        }
        if(max!=i)
        {
            temp=c[max];
            c[max]=c[i];
            c[i]=temp;

        }
    }
    printf("\n Array..........\n");
    for(i=0;i<n;i++)
    printf("%d ",c[i]);
}

10.Write a function in C to count the frequency of each element of an array
#include<stdio.h>
#include<string.h>
void countfrequency(int [],int);
int main()
{
    int n;
    printf("\n enter the size of the array");
    scanf("%d",&n);
    int a[n],i;
    printf("\n enter %d element in the array",n);
    for(i=0;i<n;i++)
    scanf("%d",&a[i]);
    countfrequency(a,n);
    return 0;
}
void countfrequency(int a[],int n)
{
    int i,j,count=1,visited=-1,fr[n];
    for(i=0;i<n;i++)
    {
        count=1;
        for(j=i+1;j<n;j++)
        {
            if(a[i]==a[j])
            {
            count++;
            fr[j]=visited;
            }
        }
        if(fr[i]!=visited)
        fr[i]=count;
    }
    printf("\n Element|Frequency");
    printf("\n.............");
    for(i=0;i<n;i++)
    {
        if(fr[i]!=visited)
        {
            printf("\n %d",a[i]);
            printf("|");
            printf(" %d",fr[i]);
        }
    }
    printf("\n..............");
}
